<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>isx</id>
    <version>0.3.10</version>
    <packageSourceUrl>https://github.com/brogers5/chocolatey-package-isx/tree/v0.3.10</packageSourceUrl>
    <owners>sublym0nal</owners>
    <title>ISx</title>
    <authors>lifenjoiner</authors>
    <projectUrl>https://github.com/lifenjoiner/ISx</projectUrl>
    <!--<iconUrl>No icon is used/available for this program</iconUrl>-->
    <copyright>Copyright (c) 2017 lifenjoiner</copyright>
    <licenseUrl>https://github.com/lifenjoiner/ISx/blob/v0.3.10/LICENSE</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/lifenjoiner/ISx/tree/v0.3.10</projectSourceUrl>
    <docsUrl>https://github.com/lifenjoiner/ISx/blob/v0.3.10/readme.txt</docsUrl>
    <!--<mailingListUrl>No forum/email list exists</mailingListUrl>-->
    <bugTrackerUrl>https://github.com/lifenjoiner/ISx/issues</bugTrackerUrl>
    <tags>isx installshield installer extractor extraction portable foss</tags>
    <summary>InstallShield installer extractor</summary>
    <description><![CDATA[## ISx

ISx is a simple file extractor that extracts all components of a given InstallShield installer executable, including (but not limited to):

- InstallShield CAB files
- Compiled installation scripts/rules (i.e. INX/INS files)
- Setup initialization files
- Language-specific string resource files
- Underlying MSI packages
- Packaged setup prerequisites

ISx is intended to serve as an open-source alternative to `IsXunpack`.

### Usage Example

```shell
ISx.exe "D:\Local\setup.exe"
```

## Package Parameters

The packaged archive ships with both x86 (32-bit) and amd64 (64-bit) binaries, but this package will only create a single shim (named `ISx`) appropriate for your environment by default. If you require different shimming behavior, use the appropriate switch(es) for your use case:

|Parameter|Environment Applicability|Description|
|-|-|-|
|`/ShimWithPlatform`|All environments|Creates a second shim with an explicit platform name (i.e. `ISx-x86` and/or `ISX-amd64`). Use if you require disambiguation for your commands/scripts.|
|`/SkipLegacyShim`|32-bit only[^1]|For backward compatibility with legacy use cases depending on the x86 binary, the `ISx` shim will target the x86 binary instead. Use if this shim is undesired or unnecessary.[^2] |
|`/ShimAllBinaries`|64-bit only|Use if you require both binaries to be shimmed.[^3]|

[^1]: 64-bit environments can force package behavior for 32-bit environments with the `--forcex86` switch.

[^2]: Usage implies `/ShimWithPlatform`, as no shim would otherwise be created if omitted.

[^3]: For naming consistency with the x86 binary, consider combining with `/ShimWithPlatform`.
]]></description>
    <releaseNotes>https://github.com/lifenjoiner/ISx/releases/tag/v0.3.10</releaseNotes>
  </metadata>
  <files>
    <file src="legal\LICENSE.txt" target="legal" />
    <file src="legal\VERIFICATION.txt" target="legal" />
    <file src="tools\**" target="tools" />
  </files>
</package>
